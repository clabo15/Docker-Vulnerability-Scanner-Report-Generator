#!/bin/bash

# Ensure an image name is provided
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <image-name>"
    exit 1
fi

IMAGE_NAME=$1
IMAGE_NAME_SAFE=$(echo "$IMAGE_NAME" | tr '/' '_' | tr ':' '_')
RESULTS_DIR="$PWD/scan_results"
mkdir -p "$RESULTS_DIR"

echo "Pulling latest security tool images..."

# Pull latest Checkov image
docker pull bridgecrew/checkov:latest || { echo "Failed to pull Checkov image"; exit 1; }

# Pull latest Trivy image
docker pull aquasec/trivy:latest || { echo "Failed to pull Trivy image"; exit 1; }

# Pull latest Grype image
docker pull anchore/grype:latest || { echo "Failed to pull Grype image"; exit 1; }

# Pull latest Syft image
docker pull anchore/syft:latest || { echo "Failed to pull Syft image"; exit 1; }

echo "Pulling target Docker image..."

if ! docker image inspect "$IMAGE_NAME" > /dev/null 2>&1; then
    echo "Image $IMAGE_NAME does not exist locally. Pulling it now..."
    docker pull "$IMAGE_NAME" || { echo "Failed to pull $IMAGE_NAME"; exit 1; }
fi

echo "Starting scans..."

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "$RESULTS_DIR":/results aquasec/trivy:latest image --format json "$IMAGE_NAME" > "$RESULTS_DIR/trivy_$IMAGE_NAME_SAFE.json" || echo "Trivy scan failed for $IMAGE_NAME"

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "$RESULTS_DIR":/results anchore/grype:latest "$IMAGE_NAME" --output json > "$RESULTS_DIR/grype_$IMAGE_NAME_SAFE.json" || echo "Grype scan failed for $IMAGE_NAME"

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "$RESULTS_DIR":/results anchore/syft:latest "$IMAGE_NAME" --output json > "$RESULTS_DIR/sbom_$IMAGE_NAME_SAFE.json" || echo "Failed to generate SBOM for $IMAGE_NAME"

echo "Scanning complete. Results saved to $RESULTS_DIR"
